<?xml version="1.0" encoding="utf-8"?>
<layerModel xmlns:dm0="http://schemas.microsoft.com/VisualStudio/2008/DslTools/Core" xmlns:dm1="http://schemas.microsoft.com/dsltools/SimpleShapesModel" dslVersion="1.0.0.0" Id="627263ce-3530-46fd-b199-bc655d0e10e2" xmlns="http://schemas.microsoft.com/VisualStudio/TeamArchitect/LayerDesigner">
  <comments>
    <comment Id="3e64d26e-7d3b-4068-85fc-542528aa72f5" name="Comment1">
      <body>Method1, Method2 and Method3 can subscribe to a certain event without knowing about the other methods or even the context of the event. Method4 is in a completely unrelated class, external to the cycle of the game and was 
registered to the same event. Their data gets stored inside the InterManagerCore singleton and is kept safe until it's needed.

Suddenly, the event is fired in the update cycle (for example the user has clicked a button, an enemy has shot a bullet or the player has been hit). We want our environment to respond to this input, however we don't know
what is currently available for us. Who wants to know if the player died? Well, the game over screen surely does, our highscore counter maybe, the sound manager because it wants to play a different sound. Eventually
we might have a game too complex for us to keep track of everything. Well, we fire the event and never look back. The event fired stores a message (can be any type of data, even complex data or instances of classes)
in the safety box, and then the InterManagerCore calls all the methods that subscribed to that certain event. He doesn't know what they are, where they are or why they subscribed. The different methods aren't aware
of each other and don't really need to. They just look in the safety box for the passed message and respond, then the game flow goes back to the update cycle and the game continues.

This allows us to forget about too complex dependancy of classes/structures, we can stop worrying about too much complex finite state machines , it allows for extra uncoupling of classes which is a good thing with a bit, however
of tradeoff in performance. Really negligible unless it's a critical section of the program.
</body>
    </comment>
  </comments>
  <layers>
    <layer Id="06bbbc2c-f041-4bcb-b116-d105185bc826" name="Videogame is running">
      <childLayers>
        <layer Id="463a31bd-8eb6-437e-b050-34f3eb6ccc7b" name="Update cycle">
          <childLayers>
            <layer Id="fc2fc504-2a0b-4f70-8210-59a173dab930" name="Event">
              <dependencyToLayers>
                <dependencyFromLayerToLayer Id="8d90ef92-9962-466b-b264-118a9d87ad8a" direction="Forward">
                  <layerMoniker Id="6a325cbb-c0e9-4727-b87b-9548dfb953b6" />
                </dependencyFromLayerToLayer>
                <dependencyFromLayerToLayer Id="66de3157-3f9b-4da4-9fa9-4c2eeab7b6d9" direction="Forward">
                  <layerMoniker Id="6a5045a0-dc64-4307-b1ce-95783aca9125" />
                </dependencyFromLayerToLayer>
              </dependencyToLayers>
            </layer>
          </childLayers>
        </layer>
        <layer Id="820634d6-bb12-4f37-be04-80613f933395" name="Draw cycle" />
        <layer Id="359bda62-52c2-41af-ad05-b7fd5e63e74e" name="Method1" />
        <layer Id="c0501235-e6aa-48f4-b24f-c1443bc3c1a4" name="Method2" />
        <layer Id="113560e3-021e-446c-9883-375421fcb86f" name="Method3" />
      </childLayers>
    </layer>
    <layer Id="54e2a630-6308-424f-88eb-b3fe8d3441d8" name="InterManagerCore singleton Instance">
      <childLayers>
        <layer Id="414caa62-ea56-4ddd-92f6-9df26406cb8f" name="Layers of depth for multiple events with the same name">
          <childLayers>
            <layer Id="fd0e5575-f946-42e2-8b9b-18ec13daf8f6" name="Different events&#xD;&#xA;">
              <childLayers>
                <layer Id="6a325cbb-c0e9-4727-b87b-9548dfb953b6" name="List of registered methods for an event">
                  <dependencyToLayers>
                    <dependencyFromLayerToLayer Id="8113097a-307e-4dd5-a761-a79e39f9a332" direction="Bidirectional">
                      <layerMoniker Id="6a5045a0-dc64-4307-b1ce-95783aca9125" />
                    </dependencyFromLayerToLayer>
                    <dependencyFromLayerToLayer Id="c6b9dd1a-2bd5-4373-a1b9-4ea58f21cb48" direction="Bidirectional">
                      <layerMoniker Id="113560e3-021e-446c-9883-375421fcb86f" />
                    </dependencyFromLayerToLayer>
                    <dependencyFromLayerToLayer Id="e1d872d3-1e82-4cc7-a858-0fdc7cbdbf7c" direction="Bidirectional">
                      <layerMoniker Id="c0501235-e6aa-48f4-b24f-c1443bc3c1a4" />
                    </dependencyFromLayerToLayer>
                    <dependencyFromLayerToLayer Id="23830460-3799-4420-91dc-b84c0b2e0e0a" direction="Bidirectional">
                      <layerMoniker Id="359bda62-52c2-41af-ad05-b7fd5e63e74e" />
                    </dependencyFromLayerToLayer>
                  </dependencyToLayers>
                </layer>
              </childLayers>
            </layer>
            <layer Id="6a5045a0-dc64-4307-b1ce-95783aca9125" name="Safety box for return values of events&#xD;&#xA;" />
          </childLayers>
        </layer>
      </childLayers>
    </layer>
    <layer Id="961d3d9a-97a2-4182-b59f-e76cbaeec850" name="Class external to the game">
      <childLayers>
        <layer Id="d988eeb3-fdd2-42bd-820a-6e1062fa3e52" name="Method4">
          <dependencyToLayers>
            <dependencyFromLayerToLayer Id="e34c4716-6011-487a-92d4-b4e8bd2d9da8" direction="Bidirectional">
              <layerMoniker Id="6a325cbb-c0e9-4727-b87b-9548dfb953b6" />
            </dependencyFromLayerToLayer>
          </dependencyToLayers>
        </layer>
      </childLayers>
    </layer>
  </layers>
</layerModel>